{"ast":null,"code":"import _classCallCheck from \"/home/anas/Javascript/crypto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/anas/Javascript/crypto-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anas/Javascript/crypto-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/anas/Javascript/crypto-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/anas/Javascript/crypto-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anas/Javascript/crypto-react/src/components/crypto.js\";\nimport React, { Component } from 'react';\nimport './crypto.css';\nimport Currency from './currency.js';\nimport axios from 'axios';\n\nvar crypto =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(crypto, _Component);\n\n  _createClass(crypto, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchCurrencyData();\n      this.interval = setInterval(function () {\n        return _this2.fetchCurrencyData();\n      }, 60 * 1000);\n    }\n  }]);\n\n  function crypto(props) {\n    var _this;\n\n    _classCallCheck(this, crypto);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(crypto).call(this, props));\n\n    _this.fetchCurrencyData = function () {\n      axios.get('https://api.coinmarketcap.com/v1/ticker/?limit=10').then(function (response) {\n        var wanted = ['bitcoin', 'ethereum', 'ripple', 'eos', 'litecoin'];\n        var result = response.data.filter(function (currency) {\n          return wanted.includes(currency.id);\n        });\n\n        _this.setState({\n          data: result\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      data: [{\n        id: \"bitcoin\",\n        name: 'Bitcoin',\n        symbol: 'BTC',\n        price_usd: \"10\",\n        percent_change_1h: '0',\n        percent_change_24h: '0',\n        percent_change_7d: '0'\n      }, {\n        id: \"ethereum\",\n        name: 'Ethereum',\n        symbol: 'ETH',\n        price_usd: \"10\",\n        percent_change_1h: '0',\n        percent_change_24h: '0',\n        percent_change_7d: '0'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(crypto, [{\n    key: \"render\",\n    value: function render() {\n      var crypto = this.state.data.map(function (currency) {\n        return React.createElement(Currency, {\n          data: currency,\n          key: currency.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"crypto-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"crypto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, crypto));\n    }\n  }]);\n\n  return crypto;\n}(Component);\n\nexport default crypto;","map":{"version":3,"sources":["/home/anas/Javascript/crypto-react/src/components/crypto.js"],"names":["React","Component","Currency","axios","crypto","fetchCurrencyData","interval","setInterval","props","get","then","response","wanted","result","data","filter","currency","includes","id","setState","catch","err","console","log","state","name","symbol","price_usd","percent_change_1h","percent_change_24h","percent_change_7d","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,M;;;;;;;wCAckB;AAAA;;AAChB,WAAKC,iBAAL;AACA,WAAKC,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACF,iBAAL,EAAN;AAAA,OAAD,EAAiC,KAAK,IAAtC,CAA3B;AACH;;;AAED,kBAAYG,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UAjBnBH,iBAiBmB,GAjBC,YAAM;AACtBF,MAAAA,KAAK,CACAM,GADL,CACS,mDADT,EAEKC,IAFL,CAEU,UAAAC,QAAQ,EAAI;AACd,YAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,QAAxB,EAAkC,KAAlC,EAAyC,UAAzC,CAAf;AACA,YAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqB,UAAAC,QAAQ;AAAA,iBACxCJ,MAAM,CAACK,QAAP,CAAgBD,QAAQ,CAACE,EAAzB,CADwC;AAAA,SAA7B,CAAf;;AAGA,cAAKC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAED;AAAR,SAAd;AACH,OARL,EASKO,KATL,CASW,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OATd;AAUH,KAMkB;;AAEf,UAAKG,KAAL,GAAa;AACTV,MAAAA,IAAI,EAAE,CACF;AACII,QAAAA,EAAE,EAAE,SADR;AAEIO,QAAAA,IAAI,EAAE,SAFV;AAGIC,QAAAA,MAAM,EAAE,KAHZ;AAIIC,QAAAA,SAAS,EAAE,IAJf;AAKIC,QAAAA,iBAAiB,EAAE,GALvB;AAMIC,QAAAA,kBAAkB,EAAE,GANxB;AAOIC,QAAAA,iBAAiB,EAAE;AAPvB,OADE,EAUF;AACIZ,QAAAA,EAAE,EAAE,UADR;AAEIO,QAAAA,IAAI,EAAE,UAFV;AAGIC,QAAAA,MAAM,EAAE,KAHZ;AAIIC,QAAAA,SAAS,EAAE,IAJf;AAKIC,QAAAA,iBAAiB,EAAE,GALvB;AAMIC,QAAAA,kBAAkB,EAAE,GANxB;AAOIC,QAAAA,iBAAiB,EAAE;AAPvB,OAVE;AADG,KAAb;AAFe;AAwBlB;;;;6BACQ;AACL,UAAI1B,MAAM,GAAG,KAAKoB,KAAL,CAAWV,IAAX,CAAgBiB,GAAhB,CAAoB,UAAAf,QAAQ;AAAA,eACrC,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,QAAhB;AAA0B,UAAA,GAAG,EAAEA,QAAQ,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADqC;AAAA,OAA5B,CAAb;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBd,MAAxB,CADJ,CADJ;AAKH;;;;EAtDgBH,S;;AAwDrB,eAAeG,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './crypto.css'\nimport Currency from './currency.js'\nimport axios from 'axios'\n\nclass crypto extends Component {\n\n    fetchCurrencyData = () => {\n        axios\n            .get('https://api.coinmarketcap.com/v1/ticker/?limit=10')\n            .then(response => {\n                const wanted = ['bitcoin', 'ethereum', 'ripple', 'eos', 'litecoin']\n                const result = response.data.filter(currency =>\n                    wanted.includes(currency.id),\n                )\n                this.setState({ data: result })\n            })\n            .catch(err => console.log(err))\n    }\n    componentDidMount() {\n        this.fetchCurrencyData()\n        this.interval = setInterval(() => this.fetchCurrencyData(), 60 * 1000);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {\n                    id: \"bitcoin\",\n                    name: 'Bitcoin',\n                    symbol: 'BTC',\n                    price_usd: \"10\",\n                    percent_change_1h: '0',\n                    percent_change_24h: '0',\n                    percent_change_7d: '0'\n                },\n                {\n                    id: \"ethereum\",\n                    name: 'Ethereum',\n                    symbol: 'ETH',\n                    price_usd: \"10\",\n                    percent_change_1h: '0',\n                    percent_change_24h: '0',\n                    percent_change_7d: '0'\n                }\n            ]\n        }\n    }\n    render() {\n        let crypto = this.state.data.map(currency => (\n            <Currency data={currency} key={currency.id} />\n        ))\n\n        return (\n            <div className=\"crypto-container\">\n                <ul className=\"crypto\">{crypto}</ul>\n            </div>\n        )\n    }\n}\nexport default crypto"]},"metadata":{},"sourceType":"module"}